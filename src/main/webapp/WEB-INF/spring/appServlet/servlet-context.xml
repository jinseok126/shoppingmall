<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- js -->
	<resources mapping="/js/**" location="/resources/js/" />
	
	<!-- jQuery -->
	<resources mapping="/jQuery/**" location="/resources/js/jQuery/" />
	
	<!-- Angular JS -->
	<resources mapping="/angularjs/**" location="/resources/js/angularjs/" />

	<!-- css -->
	<resources mapping="/css/**" location="/resources/css/" />
	
	<!-- fonts -->
	<resources mapping="/fonts/**" location="/resources/fonts/" />

	<!-- image path -->
	<!-- 참고로 아래 경로는 D:\lsh\fileUpload\image의 네트워크 변환 경로 -->
	<resources mapping="/image/**"  location="file:///D:/fileUpload/image/" />
	
	<resources mapping="/product/**"  location="file:///D:/fileUpload/product/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" /><!-- 우선 순위 적용 : 차순위-->
	</beans:bean>
	
	<!-- Apache Tiles -->  
    <beans:bean id="tilesViewResolver"  
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <beans:property name="viewClass"  
            value="org.springframework.web.servlet.view.tiles3.TilesView" />  
        <beans:property name="order" value="1" /><!-- 우선 순위 적용 : 최우선-->  
    </beans:bean>  
  
    <beans:bean id="tilesConfigurer"  
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <beans:property name="definitions">  
            <beans:list>  
                <beans:value>/WEB-INF/main/tiles-def.xml</beans:value>  
            </beans:list>  
        </beans:property>  
    </beans:bean>
	
	<!-- 매핑 주소를 /security/**로 접근할 경우 LoginInterceptor 클래스가 
			컨트롤러에 접근하기 전에 preHandle 매서드가 가로챔 -->
	<interceptors>
		<interceptor>
			<mapping path="/admin/**"/>
			<beans:bean class="com.project.sm.interceptor.LoginInterceptor" />    
		</interceptor>
	</interceptors> 
	
	<context:component-scan base-package="com.project.sm" />
	
</beans:beans>
